-- $ARGV[$I] - should contain a data import dir path 
-- $ARGV[$+ $I 1] should contain a namespace

SET u{IDIR} $ARGV[$I];
SET u{namespace} $ARGV[$+ $I 1];

ECHO 'Loading data from ' $u{IDIR} ' to the graphs in ' <$u{namespace}> '\n';

log_enable(3,1);

ECHO "Clearing ISSA graphs...\n";

-- For metadata and thematic descriptors the full graph is updated
SPARQL CLEAR GRAPH  <$u{namespace}graph/documents>;
SPARQL CLEAR GRAPH  <$u{namespace}graph/thematic-descriptors>;
SPARQL CLEAR GRAPH  <$u{namespace}graph/document-domains>;
SPARQL CLEAR GRAPH  <$u{namespace}graph/document-keywords>;

-- For other graphs, updates are incremental (uncomment only for the first load of a dataset)
--SPARQL CLEAR GRAPH  <$u{namespace}graph/documents/text>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/annif-descriptors>;

--SPARQL CLEAR GRAPH  <$u{namespace}graph/dbpedia-spotlight-nes>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/entity-fishing-nes>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/dbpedia-spotlight-nes>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/geographic-nes>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/pyclinrec-nes>;

--SPARQL CLEAR GRAPH  <$u{namespace}graph/openalex-authorships>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/openalex-topics>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/openalex-sdgs>;
--SPARQL CLEAR GRAPH  <$u{namespace}graph/rao-stirling-index>;


DELETE FROM DB.DBA.load_list;
checkpoint;

ECHO "Load files:\n";

ld_dir ('$u{IDIR}', 'issa-document-metadata.ttl',           '$u{namespace}graph/documents');
ld_dir ('$u{IDIR}', 'issa-document-descriptors.ttl',        '$u{namespace}graph/thematic-descriptors');
ld_dir ('$u{IDIR}', 'issa-document-domains.ttl',            '$u{namespace}graph/document-domains');
ld_dir ('$u{IDIR}', 'issa-document-keywords.ttl',           '$u{namespace}graph/document-keywords');

ld_dir ('$u{IDIR}', 'issa-document-text.ttl',               '$u{namespace}graph/documents/text');
ld_dir ('$u{IDIR}', 'issa-document-annif-descriptors.ttl',  '$u{namespace}graph/annif-descriptors');
ld_dir ('$u{IDIR}', 'issa-document-spotlight-*.ttl',        '$u{namespace}graph/dbpedia-spotlight-nes');
ld_dir ('$u{IDIR}', 'issa-document-entityfishing-*.ttl',    '$u{namespace}graph/entity-fishing-nes');
ld_dir ('$u{IDIR}', 'issa-document-geonames-*.ttl',         '$u{namespace}graph/geographic-nes');
ld_dir ('$u{IDIR}', 'issa-document-pyclinrec-*.ttl',        '$u{namespace}graph/pyclinrec-nes');

ld_dir ('$u{IDIR}', 'issa-document-openalex-authorships.ttl','$u{namespace}graph/openalex-authorships');
ld_dir ('$u{IDIR}', 'issa-document-openalex-topics.ttl',    '$u{namespace}graph/openalex-topics');
ld_dir ('$u{IDIR}', 'issa-document-openalex-sdgs.ttl',      '$u{namespace}graph/openalex-sdgs');
ld_dir ('$u{IDIR}', 'issa-document-rao-stirling.ttl',       '$u{namespace}graph/rao-stirling-index');


-- List files and graphs to load
ECHO "Graphs to load\n";
SELECT ll_file, ll_graph FROM DB.DBA.load_list ORDER BY ll_graph, ll_file;

ECHO "Loading ISSA graphs...\n";
rdf_loader_run ();
checkpoint;

-- Check for load errors
ECHO "Graphs loaded (check for errors)\n";
SELECT * FROM DB.DBA.load_list;

-- Report the number of triples in the graphs
SPARQL SELECT DISTINCT ?graph (COUNT(*) as ?triples) WHERE { GRAPH ?graph {?s ?p ?o} FILTER ( regex(?graph, "issa") )} ORDER BY ?graph;

-- Add all text index rules for all graphs
--RDF_OBJ_FT_RULE_ADD (null, null, 'All');
--VT_INC_INDEX_DB_DBA_RDF_OBJ ();

EXIT;

